<!DOCTYPE html>

<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>Terpstra Keyboard WebApp</title>
	
	<meta charset="utf-8"> 
	<meta name="viewport" content="minimal-ui, width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, target-densitydpi=device-dpi">
	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
	<meta name="author" content="James Fenn">
	
	<link rel="stylesheet" href="normalize.css">
	<link rel="stylesheet" href="skeleton.css">
	<link rel="stylesheet" href="terpstra-style.css">
	
	
	<script src="QueryData.js"></script>
	<script src="jscolor.js"></script>
</head>

<body style="overflow: scroll;">
	
	<div id="landing-page" class="section" style="display: block;">
		<div class="container">
		  <h2><a href="http://terpstrakeyboard.com/">Terpstra Keyboard</a> <a href="http://terpstrakeyboard.com/play-it-now/">WebApp</a></h2>
		  <div class="row">
              <img src="1x1.png">
          </div>

			<form id="settingsForm">
				<div class="row">
					<div class="one-half column thincol-parent">
						<div class="u-half-width rpad"> 
                        
                          <label>Tuning\Layout Quick Links</label>
                          <select id="quicklinks" onchange="javascript:location.href = this.value;" class="u-full-width">
                                      
                              <option selected="selected" disabled="disabled">Choose Preset</option>
                              <optgroup label="Isomorphic Layouts for 12-ET">
                                  <option value="?fundamental=261.6255653&right=2&upright=1&size=50&rotation=343.897886248&instrument=piano&enum=false&equivSteps=12&piano_colors=true&spectrum_colors=false&no_labels=false&scale=!%2012-ed2%20Jank%C3%B3%206-6%20Balanced%20Symmetric%20Bilinear%20Uniform%20Keyboard%20~Halberstadt.scl%0A!%2012-tone%20equal%20tempered%20scale%20consisting%20of%2012%20sonically%20equal%20divisions%20per%20frequency%20halving%2Fdoubling%2C%20mapped%20on%20a%20(hexagonal)%20tilted%20Jank%C3%B3%20layout%20which%20can%20be%20regarded%20as%20a%20stacked%206-6%2FBalanced%2FSymmetric%2FBilinear%2FUniform%20Keyboard%2C%20and%20which%20approximates%20the%207-white%2F5-black%20Halberstadt%20organ%20layout%20(the%20classic%20piano%20keyboard).%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2012-ed2%20Jank%C3%B3%20%2F%206-6%2FBalanced%2FSymmetric%2FBilinear%2FUniform%20Keyboard%20%2F%20~Halberstadt%0A12%0A!%0A100.00000%0A200.00000%0A300.00000%0A400.00000%0A500.00000%0A600.00000%0A700.00000%0A800.00000%0A900.00000%0A1000.00000%0A1100.00000%0A1200.00000&names=C%0AD%E2%99%AD%2FC%E2%99%AF%0AD%0AE%E2%99%AD%2FD%E2%99%AF%0AE%0AF%0AG%E2%99%AD%2FF%E2%99%AF%0AG%0AA%E2%99%AD%2FG%E2%99%AF%0AA%0AB%E2%99%AD%2FA%E2%99%AF%0AB&note_colors=ffffff%0A7b7b7b%0Affffff%0A7b7b7b%0Affffff%0Affffff%0A7b7b7b%0Affffff%0A7b7b7b%0Affffff%0A7b7b7b%0Affffff">Jankó / 6-6/Balanced/Symmetric/Bilinear/Uniform</option>
                                  
                                  <option value="?fundamental=261.6255653&right=4&upright=7&size=50&rotation=343.897886248&instrument=harpsichord&enum=false&equivSteps=12&piano_colors=true&spectrum_colors=false&no_labels=false&scale=!%2012-ed2%20Harmonic%20Table%20Sonome%20Tonnetz%205-Limit%20Tuning%20Lattice%20Tri-Axial%20Matrix%20Model%20(of%20Musical%20Harmony).scl%0A!%2012-tone%20equal%20tempered%20scale%20consisting%20of%2012%20sonically%20equal%20divisions%20per%20frequency%20halving%2Fdoubling%2C%20mapped%20on%20the%20Harmonic%20Table%20layout%2C%20also%20known%20as%20Sonome%3A%20a%20tonal%20array%20topologically%20equivalent%20to%20Euler%27s%20Tonnetz%2C%20which%20is%20a%20conceptual%20lattice%20diagram%20representing%20tonal%20space%2C%20also%20known%20as%205-Limit%20Tuning%20Lattice%20or%20Tri-Axial%20The%20Matrix%20Model%20(of%20Musical%20Harmony).%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2012-ed2%20Harmonic%20Table%20%2F%20Sonome%20%2F%20Tonnetz%20%2F%205-Limit%20Tuning%20Lattice%20%2F%20Tri-Axial%20Matrix%20Model%20(of%20Musical%20Harmony)%0A12%0A!%0A100.00000%0A200.00000%0A300.00000%0A400.00000%0A500.00000%0A600.00000%0A700.00000%0A800.00000%0A900.00000%0A1000.00000%0A1100.00000%0A1200.00000&names=C%0AD%E2%99%AD%2FC%E2%99%AF%0AD%0AE%E2%99%AD%2FD%E2%99%AF%0AE%0AF%0AG%E2%99%AD%2FF%E2%99%AF%0AG%0AA%E2%99%AD%2FG%E2%99%AF%0AA%0AB%E2%99%AD%2FA%E2%99%AF%0AB&note_colors=ffffff%0Abababa%0A8ef4fb%0Abababa%0Affffff%0Affffff%0Abababa%0Affffff%0A49aded%0Affffff%0Abababa%0Affffff">Harmonic Table / Sonome / Tonnetz / 5-L Lattice / Matrix Model</option>
                                  
                                  <option value="?fundamental=261.6255653&right=2&upright=7&size=50&rotation=343.897886248&instrument=rhodes&enum=false&equivSteps=12&piano_colors=true&spectrum_colors=false&no_labels=false&scale=!%2012-ed2%20Wicki-Hayden.scl%0A!%2012-tone%20equal%20tempered%20scale%20consisting%20of%2012%20sonically%20equal%20divisions%20per%20frequency%20halving%2Fdoubling%2C%20mapped%20on%20the%20Wicki-Hayden%20layout%2C%20originally%20devised%20for%20the%20bandoneon%20and%20concertina%20(free-reed%20aerophones%20of%20the%20harmonica%2Faccordion%20family).%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2012-ed2%20Wicki-Hayden%0A12%0A!%0A100.00000%0A200.00000%0A300.00000%0A400.00000%0A500.00000%0A600.00000%0A700.00000%0A800.00000%0A900.00000%0A1000.00000%0A1100.00000%0A1200.00000&names=C%0AD%E2%99%AD%2FC%E2%99%AF%0AD%0AE%E2%99%AD%2FD%E2%99%AF%0AE%0AF%0AG%E2%99%AD%2FF%E2%99%AF%0AG%0AA%E2%99%AD%2FG%E2%99%AF%0AA%0AB%E2%99%AD%2FA%E2%99%AF%0AB&note_colors=ffffff%0Aff9f40%0Affffff%0Aff9f40%0Affffff%0Affffff%0Aff9f40%0Affffff%0Aff9f40%0Affffff%0Aff9f40%0Affffff">Wicki-Hayden</option>
                                  
                                  <option value="?fundamental=261.6255653&right=3&upright=2&size=50&rotation=343.897886248&instrument=sawtooth&enum=false&equivSteps=12&piano_colors=true&spectrum_colors=false&no_labels=false&scale=!%2012-ed2%20B-System%20Chromatic%20Button.scl%0A!%2012-tone%20equal%20tempered%20scale%20consisting%20of%2012%20sonically%20equal%20divisions%20per%20frequency%20halving%2Fdoubling%2C%20mapped%20on%20a%20(hexagonal)%20tilted%20Chromatic%20Button%20System%20Type-B%20used%20on%20some%20button%20accordions.%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2012-ed2%20B-System%20Chromatic%20Button%0A12%0A!%0A100.00000%0A200.00000%0A300.00000%0A400.00000%0A500.00000%0A600.00000%0A700.00000%0A800.00000%0A900.00000%0A1000.00000%0A1100.00000%0A1200.00000&names=C%0AD%E2%99%AD%2FC%E2%99%AF%0AD%0AE%E2%99%AD%2FD%E2%99%AF%0AE%0AF%0AG%E2%99%AD%2FF%E2%99%AF%0AG%0AA%E2%99%AD%2FG%E2%99%AF%0AA%0AB%E2%99%AD%2FA%E2%99%AF%0AB&note_colors=ffffff%0A7b7b7b%0Affffff%0A7b7b7b%0Affffff%0Affffff%0A7b7b7b%0Affffff%0A7b7b7b%0Affffff%0A7b7b7b%0Affffff">B-System Chromatic Button</option>
                                  
                                  <option value="?fundamental=261.6255653&right=3&upright=1&size=50&rotation=343.897886248&instrument=sawtooth&enum=false&equivSteps=12&piano_colors=true&spectrum_colors=false&no_labels=false&scale=!%2012-ed2%20C-System%20Chromatic%20Button.scl%0A!%2012-tone%20equal%20tempered%20scale%20consisting%20of%2012%20sonically%20equal%20divisions%20per%20frequency%20halving%2Fdoubling%2C%20mapped%20on%20a%20(hexagonal)%20tilted%20Chromatic%20Button%20System%20Type-C%20used%20on%20some%20button%20accordions.%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2012-ed2%20C-System%20Chromatic%20Button%0A12%0A!%0A100.00000%0A200.00000%0A300.00000%0A400.00000%0A500.00000%0A600.00000%0A700.00000%0A800.00000%0A900.00000%0A1000.00000%0A1100.00000%0A1200.00000&names=C%0AD%E2%99%AD%2FC%E2%99%AF%0AD%0AE%E2%99%AD%2FD%E2%99%AF%0AE%0AF%0AG%E2%99%AD%2FF%E2%99%AF%0AG%0AA%E2%99%AD%2FG%E2%99%AF%0AA%0AB%E2%99%AD%2FA%E2%99%AF%0AB&note_colors=ffffff%0A7b7b7b%0Affffff%0A7b7b7b%0Affffff%0Affffff%0A7b7b7b%0Affffff%0A7b7b7b%0Affffff%0A7b7b7b%0Affffff">C-System Chromatic Button</option>
                              </optgroup>
                              
                              <optgroup label="Just Intonation">
                                  <option value="?fundamental=256&right=1&upright=0&size=50&rotation=343.897886248&instrument=qanun&enum=false&equivSteps=7&spectrum_colors=false&no_labels=false&scale=!%207-JI%20Rast%20Maqam%20%28Arabic%29%20%E2%80%94%20%20Eight%20Echos%20%28Fourth%20Plagal%2C%20Byzantine%29%20Bosanquet%20Wilson%20Terpstra.scl%0A!%207-tone%20Arabic%20Rast%20Maqam%20made%20from%20two%20disjunct%20Rast%20tetrachords%20according%20to%20Mansour%20Zalzal%E2%80%99s%20famous%20lute%20tuning%20as%20described%20by%20al-Farabi%2C%20where%20the%20ratios%20including%20prime%20number%2011%20are%20alterations%20of%203-Limit%20versions%2C%20coinciding%20with%20the%20Eight%20Echos%20or%20Fourth%20Plagal%20of%20Byzantine%20Psaltic%20Chant%20described%20misleadingly%20in%20text%20books%20as%2012-10-8-12-12-10-8%20using%20the%2072%20moria%20system%20of%20approximation%2C%20mapped%20on%20a%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20layout.%0A!%0ATerpstra%20Keyboard%20WebApp%20|%207-JI%20Rast%20Maqam%20%2F%20Eight%20Echos%20%E2%80%94%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%0A7%0A!%0A9%2F8%0A27%2F22%0A4%2F3%0A3%2F2%0A27%2F16%0A81%2F44%0A2%2F1&names=1%2F1%0A9%2F8%0A27%2F22%0A4%2F3%0A3%2F2%0A27%2F16%0A81%2F44&note_colors=ffffff%0Affc37d%0Aff9fb7%0Af7ffaf%0Af7ffaf%0Affc37d%0Aff9fb7">7-JI Rast Maqam / Eight Echos — Bosanquet / Wilson / Terpstra</option>
              
                                  <option value="?fundamental=256&right=2&upright=1&size=50&rotation=343.897886248&instrument=piano&enum=false&equivSteps=12&spectrum_colors=false&no_labels=false&scale=!%2012-JI-7L%20Jank%C3%B3%206-6%20Balanced%20Symmetric%20Bilinear%20Uniform%20Keyboard%20~Halberstadt.scl%0A!%2012-tone%20Just%20Intonation%20classic%207-Limit%20scale%2C%20consisting%20of%2012%20rational%20divisions%20per%20frequency%20halving%2Fdoubling%20with%20sonic%20distances%20derived%20from%20the%20harmonic%20series%20up%20to%20a%20prime%20limit%20of%207%2C%20mapped%20on%20a%20(hexagonal)%20tilted%20Jank%C3%B3%20layout%20which%20can%20be%20regarded%20as%20a%20stacked%206-6%2FBalanced%2FSymmetric%2FBilinear%2FUniform%20Keyboard%2C%20and%20which%20approximates%20the%207-white%2F5-black%20Halberstadt%20organ%20layout%20(the%20classic%20piano%20keyboard).%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2012-JI-7L%20Jank%C3%B3%20%2F%206-6%2FBalanced%2FSymmetric%2FBilinear%2FUniform%20Keyboard%20%2F%20~Halberstadt%0A12%0A!%0A16%2F15%0A9%2F8%0A6%2F5%0A5%2F4%0A4%2F3%0A7%2F5%0A3%2F2%0A8%2F5%0A5%2F3%0A7%2F4%0A15%2F8%0A2%2F1&names=1%2F1%0A16%2F15%0A9%2F8%0A6%2F5%0A5%2F4%0A4%2F3%0A7%2F5%0A3%2F2%0A8%2F5%0A5%2F3%0A7%2F4%0A15%2F8&note_colors=55d455%0A55f4aa%0A55ffff%0A55b4ff%0A5555ea%0Aaa55ff%0Aff55ff%0Aff55aa%0Af45555%0Affaa55%0Affff55%0Aaaf455">12-JI-7L Jankó / 6-6/Balanced/Symmetric/Bilinear/Uniform</option>
              
                                  <option value="?fundamental=256&right=3&upright=2&size=50&rotation=343.897886248&instrument=qanun&enum=false&equivSteps=17&spectrum_colors=false&no_labels=false&scale=!%2017-JI-5L-Arabic-theoretical%20Bosanquet%20Wilson%20Terpstra.scl%0A!%2017-tone%20Arabic%20theoretical%20scale%3A%205-Limit%20Just%20Intonation%20which%20is%20schismatic%20equivalent%20to%20a%2017-tone%203-Limit%20scale%20generated%20from%2012%20steps%20descending%20and%204%20ascending%20plus%20the%20fundamental%2C%20consisting%20of%2017%20rational%20divisions%20per%20frequency%20halving%2Fdoubling%20with%20sonic%20distances%20derived%20from%20the%20harmonic%20series%20up%20to%20a%20prime%20limit%20of%205%2C%20presumably%20used%20until%20the%208th%20century%2C%20mapped%20on%20a%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20layout.%0A!%0ATerpstra%20Keyboard%20WebApp%20|%2017-JI-5L-Arabic-theoretical%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%0A17%0A!%0A256%2F243%0A10%2F9%0A9%2F8%0A32%2F27%0A5%2F4%0A81%2F64%0A4%2F3%0A45%2F32%0A40%2F27%0A3%2F2%0A128%2F81%0A5%2F3%0A27%2F16%0A16%2F9%0A15%2F8%0A160%2F81%0A2%2F1&names=1%2F1%0A256%2F243%0A10%2F9%0A9%2F8%0A32%2F27%0A5%2F4%0A81%2F64%0A4%2F3%0A45%2F32%0A40%2F27%0A3%2F2%0A128%2F81%0A5%2F3%0A27%2F16%0A16%2F9%0A15%2F8%0A160%2F81&note_colors=f7ffaf%0A8fc7ef%0Aff9fb7%0Af7ffaf%0A8fc7ef%0Af7ffaf%0Aff9fb7%0Af7ffaf%0A8fc7ef%0Aff9fb7%0Af7ffaf%0A8fc7ef%0Af7ffaf%0Aff9fb7%0A8fc7ef%0Af7ffaf%0Aff9fb7">17-JI-5L-Arabic-theoretical Bosanquet / Wilson / Terpstra</option>
              
                                  <option value="?fundamental=256&right=3&upright=2&size=50&rotation=343.897886248&instrument=harp&enum=false&equivSteps=17&spectrum_colors=false&no_labels=false&scale=!%2017-JI-11L-Wilson%20Bosanquet%20Wilson%20Terpstra.scl%0A!%2017-tone%20Just%20Intonation%2011-Limit%20scale%20by%20Erv%20Wilson%2C%20consisting%20of%2017%20rational%20divisions%20per%20frequency%20halving%2Fdoubling%20with%20sonic%20distances%20derived%20from%20the%20harmonic%20series%20up%20to%20a%20prime%20limit%20of%2011%2C%20mapped%20on%20a%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20layout.%0A!%20Fokblock(%5B64%2F63%2C%2056%2F55%2C%20968%2F945%2C%2036%2F35%5D%2C%20%5B5%2C%206%2C%2011%2C%206%5D)%20%3D%20%0A!%20Fokblock(%5B64%2F63%2C%2056%2F55%2C%2036%2F35%2C%20704%2F675%5D%2C%20%5B5%2C%203%2C%206%2C%2011%5D)%20%3D%0A!%20Fokblock(%5B64%2F63%2C%20968%2F945%2C%2036%2F35%2C%20704%2F675%5D%2C%20%5B5%2C%2013%2C%206%2C%206%5D)%20wakalix%0ATerpstra%20Keyboard%20WebApp%20%7C%2017-JI-11L-Wilson%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%0A17%0A!%0A22%2F21%0A11%2F10%0A9%2F8%0A7%2F6%0A11%2F9%0A5%2F4%0A4%2F3%0A11%2F8%0A22%2F15%0A3%2F2%0A11%2F7%0A44%2F27%0A5%2F3%0A7%2F4%0A11%2F6%0A15%2F8%0A2%2F1&names=R%0A22%2F21%0A11%2F10%0A9%2F8%0A7%2F6%0A11%2F9%0A5%2F4%0A4%2F3%0A11%2F8%0A22%2F15%0A3%2F2%0A11%2F7%0A44%2F27%0A5%2F3%0A7%2F4%0A11%2F6%0A15%2F8&note_colors=8fc7ef%0Af7ffaf%0Affc37d%0A8fc7ef%0Af7ffaf%0Affc37d%0A8fc7ef%0A8fc7ef%0Affc37d%0Affc37d%0A8fc7ef%0Af7ffaf%0Affc37d%0A8fc7ef%0Af7ffaf%0Affc37d%0A8fc7ef">17-JI-11L-Wilson Bosanquet / Wilson / Terpstra</option>
                                  
                                  <option value="?fundamental=272.2044155&right=4&upright=3&size=50&rotation=343.897886248&instrument=qanun&enum=false&equivSteps=22&spectrum_colors=false&no_labels=false&scale=!%2022-JI-5L-Indian%20Bosanquet%20Wilson%20Terpstra.scl%0A!%2022-tone%20Indian%20scale%3A%205-Limit%20Just%20Intonation%20which%20is%20schismatic%20equivalent%20to%20a%2022-tone%203-Limit%20scale%20generated%20from%2011%20steps%20ascending%20and%2010%20descending%20plus%20the%20fundamental%2C%20consisting%20of%2022%20rational%20divisions%20per%20frequency%20halving%2Fdoubling%20with%20sonic%20distances%20derived%20from%20the%20harmonic%20series%20up%20to%20a%20prime%20limit%20of%205%2C%20notated%20after%20Alain%20Dani%C3%A9lou%2C%20having%20as%20reference%20frequency%20the%20Earth%27s%20year%20transposed%2033%20octaves%20higher%2C%20mapped%20on%20a%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20layout.%0A!%0ATerpstra%20Keyboard%20WebApp%20|%2022-JI-5L-Indian%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%0A22%0A!%0A256%2F243%0A16%2F15%0A10%2F9%0A9%2F8%0A32%2F27%0A6%2F5%0A5%2F4%0A81%2F64%0A4%2F3%0A27%2F20%0A45%2F32%0A64%2F45%0A3%2F2%0A128%2F81%0A8%2F5%0A5%2F3%0A27%2F16%0A16%2F9%0A9%2F5%0A15%2F8%0A243%2F128%0A2%2F1&names=Sa%0AReL-%0AReL%2B%0ARe-%0ARe%0AGaL%0AGab%0AGa%0AGa%2B%0AMa%0AMa%2B%0AMaL-%0AMaL%2B%0APa%0ADhaL%0ADhab%0ADha%0ADha%2B%0ANiL%2B%0ANib%0ANi%0ANi%2B&note_colors=80df80%0A80cfff%0Affbfff%0Affcf80%0A80df80%0A80cfff%0Affbfff%0A80df80%0Affcf80%0A80df80%0Affcf80%0A80cfff%0Affbfff%0A80df80%0A80cfff%0Affbfff%0Affcf80%0A80df80%0A80cfff%0Affbfff%0A80df80%0Affcf80">22-JI-5L-Indian Bosanquet / Wilson / Terpstra</option>
                                  
                                  <option value="?fundamental=264&right=5&upright=2&size=50&rotation=343.897886248&instrument=organ&enum=false&equivSteps=31&spectrum_colors=false&no_labels=false&scale=!%2031-JI-7L-Fokker%20Bosanquet%20Wilson%20Terpstra.scl%0A!%2031-tone%20Just%20Intonation%207-Limit%20scale%20by%20Adriaan%20Fokker%2C%20consisting%20of%2031%20rational%20divisions%20per%20frequency%20halving%2Fdoubling%20with%20sonic%20distances%20derived%20from%20the%20harmonic%20series%20up%20to%20a%20prime%20limit%20of%207%2C%20mapped%20on%20a%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20layout.%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2031-JI-7L-Fokker%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%0A31%0A!%0A64%2F63%0A135%2F128%0A15%2F14%0A35%2F32%0A9%2F8%0A8%2F7%0A7%2F6%0A135%2F112%0A315%2F256%0A5%2F4%0A9%2F7%0A21%2F16%0A4%2F3%0A175%2F128%0A45%2F32%0A10%2F7%0A35%2F24%0A3%2F2%0A32%2F21%0A14%2F9%0A45%2F28%0A105%2F64%0A5%2F3%0A12%2F7%0A7%2F4%0A16%2F9%0A945%2F512%0A15%2F8%0A40%2F21%0A63%2F32%0A2%2F1&names=1%2F1%0A64%2F63%0A135%2F128%0A15%2F14%0A35%2F32%0A9%2F8%0A8%2F7%0A7%2F6%0A135%2F112%0A315%2F256%0A5%2F4%0A9%2F7%0A21%2F16%0A4%2F3%0A175%2F128%0A45%2F32%0A10%2F7%0A35%2F24%0A3%2F2%0A32%2F21%0A14%2F9%0A45%2F28%0A105%2F64%0A5%2F3%0A12%2F7%0A7%2F4%0A16%2F9%0A945%2F512%0A15%2F8%0A40%2F21%0A63%2F32&note_colors=ffffff%0Aff9f41%0Acfcfcf%0Abbaa93%0A7b7b7b%0Affffff%0Aff9f41%0Acfcfcf%0Abbaa93%0A7b7b7b%0Affffff%0Abbaa93%0Acfcfcf%0Affffff%0Aff9f41%0Acfcfcf%0Abbaa93%0A7b7b7b%0Affffff%0Aff9f41%0Acfcfcf%0Abbaa93%0A7b7b7b%0Affffff%0Aff9f41%0Acfcfcf%0Abbaa93%0A7b7b7b%0Affffff%0Abbaa93%0Acfcfcf%0Affffff">31-JI-7L-Fokker Bosanquet / Wilson / Terpstra</option>
                                  <option value="?fundamental=260.74074074&right=7&upright=3&size=50&rotation=343.897886248&instrument=gayageum&enum=false&equivSteps=43&spectrum_colors=true&fundamental_color=55FF55&no_labels=false&scale=! 43-JI-11L-Partch Bosanquet Wilson Terpstra.scl%0A! 43-tone Just Intonation 11-Limit scale by Harry Partch%2C consisting of 43 rational divisions per frequency halving%2Fdoubling with sonic distances derived symmetrically from both ascending and descending harmonic series (otonalities and utonalities) up to a prime limit of 11%2C mapped on a Bosanquet %2F Wilson %2F Terpstra layout.%0A!%0ATerpstra Keyboard WebApp | 43-JI-11L-Partch Bosanquet %2F Wilson %2F Terpstra%0A43%0A!%0A81%2F80%0A33%2F32%0A21%2F20%0A16%2F15%0A12%2F11%0A11%2F10%0A10%2F9%0A9%2F8%0A8%2F7%0A7%2F6%0A32%2F27%0A6%2F5%0A11%2F9%0A5%2F4%0A14%2F11%0A9%2F7%0A21%2F16%0A4%2F3%0A27%2F20%0A11%2F8%0A7%2F5%0A10%2F7%0A16%2F11%0A40%2F27%0A3%2F2%0A32%2F21%0A14%2F9%0A11%2F7%0A8%2F5%0A18%2F11%0A5%2F3%0A27%2F16%0A12%2F7%0A7%2F4%0A16%2F9%0A9%2F5%0A20%2F11%0A11%2F6%0A15%2F8%0A40%2F21%0A64%2F33%0A160%2F81%0A2%2F1&names=1%2F1%0A81%2F80%0A33%2F32%0A21%2F20%0A16%2F15%0A12%2F11%0A11%2F10%0A10%2F9%0A9%2F8%0A8%2F7%0A7%2F6%0A32%2F27%0A6%2F5%0A11%2F9%0A5%2F4%0A14%2F11%0A9%2F7%0A21%2F16%0A4%2F3%0A27%2F20%0A11%2F8%0A7%2F5%0A10%2F7%0A16%2F11%0A40%2F27%0A3%2F2%0A32%2F21%0A14%2F9%0A11%2F7%0A8%2F5%0A18%2F11%0A5%2F3%0A27%2F16%0A12%2F7%0A7%2F4%0A16%2F9%0A9%2F5%0A20%2F11%0A11%2F6%0A15%2F8%0A40%2F21%0A64%2F33%0A160%2F81&note_colors=">43-JI-11L-Partch Bosanquet / Wilson / Terpstra</option>
                                  <option value="?fundamental=256&right=9&upright=5&size=50&rotation=343.897886248&instrument=qanun&enum=false&equivSteps=53&spectrum_colors=false&no_labels=false&scale=!%2053-RI-3L%20Bosanquet%20Wilson%20Terpstra%20Male%20(Western).scl%0A!%2053-tone%20Rational%20Intonation%203-Limit%20scale%2C%20consisting%20of%2053%20rational%20divisions%20per%20frequency%20halving%2Fdoubling%20with%20sonic%20distances%20derived%20solely%20from%20the%20harmonics%202%20and%203%20of%20both%20ascending%20and%20descending%20harmonic%20series%2C%20mapped%20on%20a%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20Male%20(Western)%20layout.%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2053-RI-3L%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20Male%20(Western)%0A53%0A!%0A531441%2F524288%0A282429536481%2F274877906944%0A134217728%2F129140163%0A256%2F243%0A2187%2F2048%0A1162261467%2F1073741824%0A34359738368%2F31381059609%0A65536%2F59049%0A9%2F8%0A4782969%2F4194304%0A2541865828329%2F2199023255552%0A16777216%2F14348907%0A32%2F27%0A19683%2F16384%0A10460353203%2F8589934592%0A4294967296%2F3486784401%0A8192%2F6561%0A81%2F64%0A43046721%2F33554432%0A1099511627776%2F847288609443%0A2097152%2F1594323%0A4%2F3%0A177147%2F131072%0A94143178827%2F68719476736%0A536870912%2F387420489%0A1024%2F729%0A729%2F512%0A387420489%2F268435456%0A137438953472%2F94143178827%0A262144%2F177147%0A3%2F2%0A1594323%2F1048576%0A847288609443%2F549755813888%0A67108864%2F43046721%0A128%2F81%0A6561%2F4096%0A3486784401%2F2147483648%0A17179869184%2F10460353203%0A32768%2F19683%0A27%2F16%0A14348907%2F8388608%0A4398046511104%2F2541865828329%0A8388608%2F4782969%0A16%2F9%0A59049%2F32768%0A31381059609%2F17179869184%0A2147483648%2F1162261467%0A4096%2F2187%0A243%2F128%0A129140163%2F67108864%0A549755813888%2F282429536481%0A1048576%2F531441%0A2%2F1&names=2%E2%81%B0%7C3%E2%81%B0%0A2%C2%B9%E2%81%B9%7C3%C2%B9%C2%B2%0A2%C2%B3%E2%81%B8%7C3%C2%B2%E2%81%B4%0A3%C2%B9%E2%81%B7%7C2%C2%B2%E2%81%B7%0A3%E2%81%B5%7C2%E2%81%B8%0A2%C2%B9%C2%B9%7C3%E2%81%B7%0A2%C2%B3%E2%81%B0%7C3%C2%B9%E2%81%B9%0A3%C2%B2%C2%B2%7C2%C2%B3%E2%81%B5%0A3%C2%B9%E2%81%B0%7C2%C2%B9%E2%81%B6%0A2%C2%B3%7C3%C2%B2%0A2%C2%B2%C2%B2%7C3%C2%B9%E2%81%B4%0A2%E2%81%B4%C2%B9%7C3%C2%B2%E2%81%B6%0A3%C2%B9%E2%81%B5%7C2%C2%B2%E2%81%B4%0A3%C2%B3%7C2%E2%81%B5%0A2%C2%B9%E2%81%B4%7C3%E2%81%B9%0A2%C2%B3%C2%B3%7C3%C2%B2%C2%B9%0A3%C2%B2%E2%81%B0%7C2%C2%B3%C2%B2%0A3%E2%81%B8%7C2%C2%B9%C2%B3%0A2%E2%81%B6%7C3%E2%81%B4%0A2%C2%B2%E2%81%B5%7C3%C2%B9%E2%81%B6%0A3%C2%B2%E2%81%B5%7C2%E2%81%B4%E2%81%B0%0A3%C2%B9%C2%B3%7C2%C2%B2%C2%B9%0A3%C2%B9%7C2%C2%B2%0A2%C2%B9%E2%81%B7%7C3%C2%B9%C2%B9%0A2%C2%B3%E2%81%B6%7C3%C2%B2%C2%B3%0A3%C2%B9%E2%81%B8%7C2%C2%B2%E2%81%B9%0A3%E2%81%B6%7C2%C2%B9%E2%81%B0%0A2%E2%81%B9%7C3%E2%81%B6%0A2%C2%B2%E2%81%B8%7C3%C2%B9%E2%81%B8%0A3%C2%B2%C2%B3%7C2%C2%B3%E2%81%B7%0A3%C2%B9%C2%B9%7C2%C2%B9%E2%81%B8%0A2%C2%B9%7C3%C2%B9%0A2%C2%B2%E2%81%B0%7C3%C2%B9%C2%B3%0A2%C2%B3%E2%81%B9%7C3%C2%B2%E2%81%B5%0A3%C2%B9%E2%81%B6%7C2%C2%B2%E2%81%B6%0A3%E2%81%B4%7C2%E2%81%B7%0A2%C2%B9%C2%B2%7C3%E2%81%B8%0A2%C2%B3%C2%B9%7C3%C2%B2%E2%81%B0%0A3%C2%B2%C2%B9%7C2%C2%B3%E2%81%B4%0A3%E2%81%B9%7C2%C2%B9%E2%81%B5%0A2%E2%81%B4%7C3%C2%B3%0A2%C2%B2%C2%B3%7C3%C2%B9%E2%81%B5%0A3%C2%B2%E2%81%B6%7C2%E2%81%B4%C2%B2%0A3%C2%B9%E2%81%B4%7C2%C2%B2%C2%B3%0A3%C2%B2%7C2%E2%81%B4%0A2%C2%B9%E2%81%B5%7C3%C2%B9%E2%81%B0%0A2%C2%B3%E2%81%B4%7C3%C2%B2%C2%B2%0A3%C2%B9%E2%81%B9%7C2%C2%B3%C2%B9%0A3%E2%81%B7%7C2%C2%B9%C2%B2%0A2%E2%81%B7%7C3%E2%81%B5%0A2%C2%B2%E2%81%B6%7C3%C2%B9%E2%81%B7%0A3%C2%B2%E2%81%B4%7C2%C2%B3%E2%81%B9%0A3%C2%B9%C2%B2%7C2%C2%B2%E2%81%B0%0A3%E2%81%B0%7C2%C2%B9&note_colors=ffffff%0Ac3b7ab%0Ae7e7e7%0A878787%0Aff9f40%0A878787%0Aff9f40%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0A878787%0Aff9f40%0A878787%0Aff9f40%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0A878787%0Aff9f40%0A878787%0Aff9f40%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0A878787%0Aff9f40%0A878787%0Aff9f40%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0A878787%0Aff9f40%0A878787%0Aff9f40%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0Aabb7c3">53-RI-3L Bosanquet / Wilson / Terpstra Male (Western)</option>
                                  
                                  <option value="?fundamental=256&right=9&upright=4&size=50&rotation=16.102113751&instrument=qanun&enum=false&equivSteps=53&spectrum_colors=false&no_labels=false&scale=!%2053-RI-3L%20Bosanquet%20Wilson%20Terpstra%20Female%20(Eastern).scl%0A!%2053-tone%20Rational%20Intonation%203-Limit%20scale%2C%20consisting%20of%2053%20rational%20divisions%20per%20frequency%20halving%2Fdoubling%20with%20sonic%20distances%20derived%20solely%20from%20the%20harmonics%202%20and%203%20of%20both%20ascending%20and%20descending%20harmonic%20series%2C%20mapped%20on%20a%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20Female%20(Eastern)%20layout.%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2053-RI-3L%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20Female%20(Eastern)%0A53%0A!%0A531441%2F524288%0A282429536481%2F274877906944%0A134217728%2F129140163%0A256%2F243%0A2187%2F2048%0A1162261467%2F1073741824%0A34359738368%2F31381059609%0A65536%2F59049%0A9%2F8%0A4782969%2F4194304%0A2541865828329%2F2199023255552%0A16777216%2F14348907%0A32%2F27%0A19683%2F16384%0A10460353203%2F8589934592%0A4294967296%2F3486784401%0A8192%2F6561%0A81%2F64%0A43046721%2F33554432%0A1099511627776%2F847288609443%0A2097152%2F1594323%0A4%2F3%0A177147%2F131072%0A94143178827%2F68719476736%0A536870912%2F387420489%0A1024%2F729%0A729%2F512%0A387420489%2F268435456%0A137438953472%2F94143178827%0A262144%2F177147%0A3%2F2%0A1594323%2F1048576%0A847288609443%2F549755813888%0A67108864%2F43046721%0A128%2F81%0A6561%2F4096%0A3486784401%2F2147483648%0A17179869184%2F10460353203%0A32768%2F19683%0A27%2F16%0A14348907%2F8388608%0A4398046511104%2F2541865828329%0A8388608%2F4782969%0A16%2F9%0A59049%2F32768%0A31381059609%2F17179869184%0A2147483648%2F1162261467%0A4096%2F2187%0A243%2F128%0A129140163%2F67108864%0A549755813888%2F282429536481%0A1048576%2F531441%0A2%2F1&names=2%E2%81%B0%7C3%E2%81%B0%0A2%C2%B9%E2%81%B9%7C3%C2%B9%C2%B2%0A2%C2%B3%E2%81%B8%7C3%C2%B2%E2%81%B4%0A3%C2%B9%E2%81%B7%7C2%C2%B2%E2%81%B7%0A3%E2%81%B5%7C2%E2%81%B8%0A2%C2%B9%C2%B9%7C3%E2%81%B7%0A2%C2%B3%E2%81%B0%7C3%C2%B9%E2%81%B9%0A3%C2%B2%C2%B2%7C2%C2%B3%E2%81%B5%0A3%C2%B9%E2%81%B0%7C2%C2%B9%E2%81%B6%0A2%C2%B3%7C3%C2%B2%0A2%C2%B2%C2%B2%7C3%C2%B9%E2%81%B4%0A2%E2%81%B4%C2%B9%7C3%C2%B2%E2%81%B6%0A3%C2%B9%E2%81%B5%7C2%C2%B2%E2%81%B4%0A3%C2%B3%7C2%E2%81%B5%0A2%C2%B9%E2%81%B4%7C3%E2%81%B9%0A2%C2%B3%C2%B3%7C3%C2%B2%C2%B9%0A3%C2%B2%E2%81%B0%7C2%C2%B3%C2%B2%0A3%E2%81%B8%7C2%C2%B9%C2%B3%0A2%E2%81%B6%7C3%E2%81%B4%0A2%C2%B2%E2%81%B5%7C3%C2%B9%E2%81%B6%0A3%C2%B2%E2%81%B5%7C2%E2%81%B4%E2%81%B0%0A3%C2%B9%C2%B3%7C2%C2%B2%C2%B9%0A3%C2%B9%7C2%C2%B2%0A2%C2%B9%E2%81%B7%7C3%C2%B9%C2%B9%0A2%C2%B3%E2%81%B6%7C3%C2%B2%C2%B3%0A3%C2%B9%E2%81%B8%7C2%C2%B2%E2%81%B9%0A3%E2%81%B6%7C2%C2%B9%E2%81%B0%0A2%E2%81%B9%7C3%E2%81%B6%0A2%C2%B2%E2%81%B8%7C3%C2%B9%E2%81%B8%0A3%C2%B2%C2%B3%7C2%C2%B3%E2%81%B7%0A3%C2%B9%C2%B9%7C2%C2%B9%E2%81%B8%0A2%C2%B9%7C3%C2%B9%0A2%C2%B2%E2%81%B0%7C3%C2%B9%C2%B3%0A2%C2%B3%E2%81%B9%7C3%C2%B2%E2%81%B5%0A3%C2%B9%E2%81%B6%7C2%C2%B2%E2%81%B6%0A3%E2%81%B4%7C2%E2%81%B7%0A2%C2%B9%C2%B2%7C3%E2%81%B8%0A2%C2%B3%C2%B9%7C3%C2%B2%E2%81%B0%0A3%C2%B2%C2%B9%7C2%C2%B3%E2%81%B4%0A3%E2%81%B9%7C2%C2%B9%E2%81%B5%0A2%E2%81%B4%7C3%C2%B3%0A2%C2%B2%C2%B3%7C3%C2%B9%E2%81%B5%0A3%C2%B2%E2%81%B6%7C2%E2%81%B4%C2%B2%0A3%C2%B9%E2%81%B4%7C2%C2%B2%C2%B3%0A3%C2%B2%7C2%E2%81%B4%0A2%C2%B9%E2%81%B5%7C3%C2%B9%E2%81%B0%0A2%C2%B3%E2%81%B4%7C3%C2%B2%C2%B2%0A3%C2%B9%E2%81%B9%7C2%C2%B3%C2%B9%0A3%E2%81%B7%7C2%C2%B9%C2%B2%0A2%E2%81%B7%7C3%E2%81%B5%0A2%C2%B2%E2%81%B6%7C3%C2%B9%E2%81%B7%0A3%C2%B2%E2%81%B4%7C2%C2%B3%E2%81%B9%0A3%C2%B9%C2%B2%7C2%C2%B2%E2%81%B0%0A3%E2%81%B0%7C2%C2%B9&note_colors=ffffff%0Ac3b7ab%0Ae7e7e7%0A878787%0Aff9f40%0A878787%0Aff9f40%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0A878787%0Aff9f40%0A878787%0Aff9f40%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0A878787%0Aff9f40%0A878787%0Aff9f40%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0A878787%0Aff9f40%0A878787%0Aff9f40%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0A878787%0Aff9f40%0A878787%0Aff9f40%0Ae7e7e7%0Aabb7c3%0Affffff%0Ac3b7ab%0Ae7e7e7%0Aabb7c3">53-RI-3L Mirrored Bosanquet/Wilson / Terpstra Female (Eastern)</option>
                              </optgroup>
              
                              <optgroup label="Equal Temperaments">
                                  <option value="?fundamental=254.5642522&right=3&upright=1&size=50&rotation=343.897886248&instrument=piano&enum=false&equivSteps=19&spectrum_colors=false&no_labels=false&scale=!%2019-ed2%20Bosanquet%20Wilson%20Terpstra.scl%0A!%2019-tone%20equal%20tempered%20scale%20consisting%20of%2012%20sonically%20equal%20divisions%20per%20frequency%20halving%2Fdoubling%2C%20mapped%20on%20a%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20layout.%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2019-ed2%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%0A19%0A!%0A63.15789%0A126.31579%0A189.47368%0A252.63158%0A315.78947%0A378.94737%0A442.10526%0A505.26316%0A568.42105%0A631.57895%0A694.73684%0A757.89474%0A821.05263%0A884.21053%0A947.36842%0A1010.52632%0A1073.68421%0A1136.84211%0A1200.00000&names=C%0AC%E2%99%AF%0AD%E2%99%AD%0AD%0AD%E2%99%AF%0AE%E2%99%AD%0AE%0AE%E2%99%AF%2FF%E2%99%AD%0AF%0AF%E2%99%AF%0AG%E2%99%AD%0AG%0AG%E2%99%AF%0AA%E2%99%AD%0AA%0AA%E2%99%AF%0AB%E2%99%AD%0AB%0AB%E2%99%AF%2FC%E2%99%AD&note_colors=ffffff%0A7fbfd4%0Aff9f40%0Affffff%0A7fbfd4%0Aff9f40%0Affffff%0Abfaf8a%0Affffff%0A7fbfd4%0Aff9f40%0Affffff%0A7fbfd4%0Aff9f40%0Affffff%0A7fbfd4%0Aff9f40%0Affffff%0Abfaf8a">19-ed2 Bosanquet / Wilson / Terpstra</option>
                                  
                                  <option value="?fundamental=263.09212&right=5&upright=2&size=50&rotation=343.897886248&instrument=organ&enum=false&equivSteps=31&spectrum_colors=false&no_labels=false&scale=!%2031-ed2%20Bosanquet%20Wilson%20Terpstra.scl%0A!%2031-tone%20equal%20tempered%20scale%20consisting%20of%2031%20sonically%20equal%20divisions%20per%20frequency%20halving%2Fdoubling%20in%20standard%20meantone%20notation%2C%20mapped%20on%20a%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20layout.%0A!%0ATerpstra%20Keyboard%20WebApp%20%7C%2031-ed2%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%0A31%0A!%0A38.70968%0A77.41935%0A116.12903%0A154.83871%0A193.54839%0A232.25806%0A270.96774%0A309.67742%0A348.38710%0A387.09677%0A425.80645%0A464.51613%0A503.22581%0A541.93548%0A580.64516%0A619.35484%0A658.06452%0A696.77419%0A735.48387%0A774.19355%0A812.90323%0A851.61290%0A890.32258%0A929.03226%0A967.74194%0A1006.45161%0A1045.16129%0A1083.87097%0A1122.58065%0A1161.29032%0A1200.00000&names=C%0AD%E2%99%AD%E2%99%AD%0AC%E2%99%AF%0AD%E2%99%AD%0AC%C3%97%0AD%0AE%E2%99%AD%E2%99%AD%0AD%E2%99%AF%0AE%E2%99%AD%0AD%C3%97%0AE%0AF%E2%99%AD%0AE%E2%99%AF%0AF%0AG%E2%99%AD%E2%99%AD%0AF%E2%99%AF%0AG%E2%99%AD%0AF%C3%97%0AG%0AA%E2%99%AD%E2%99%AD%0AG%E2%99%AF%0AA%E2%99%AD%0AG%C3%97%0AA%0AB%E2%99%AD%E2%99%AD%0AA%E2%99%AF%0AB%E2%99%AD%0AA%C3%97%0AB%0AC%E2%99%AD%0AB%E2%99%AF&note_colors=ffffff%0Aff9f41%0Acfcfcf%0Abbaa93%0A7b7b7b%0Affffff%0Aff9f41%0Acfcfcf%0Abbaa93%0A7b7b7b%0Affffff%0Abbaa93%0Acfcfcf%0Affffff%0Aff9f41%0Acfcfcf%0Abbaa93%0A7b7b7b%0Affffff%0Aff9f41%0Acfcfcf%0Abbaa93%0A7b7b7b%0Affffff%0Aff9f41%0Acfcfcf%0Abbaa93%0A7b7b7b%0Affffff%0Abbaa93%0Acfcfcf%0Affffff">31-ed2 Bosanquet / Wilson / Terpstra</option>
                                  
                              <option value="?fundamental=260.5221364&right=7&upright=4&size=50&rotation=343.897886248&instrument=harp&enum=true&equivSteps=41&spectrum_colors=false&no_labels=false&scale=!%2041-ed2%20Bosanquet%20Wilson%20Terpstra.scl%0A!%2041-tone%20equal%20tempered%20scale%20consisting%20of%2041%20sonically%20equal%20divisions%20per%20frequency%20halving%2Fdoubling%2C%20mapped%20on%20a%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%20layout.%0A!%0ATerpstra%20Keyboard%20WebApp%20|%2041-ed2%20Bosanquet%20%2F%20Wilson%20%2F%20Terpstra%0A41%0A!%0A29.26829%0A58.53659%0A87.80488%0A117.07317%0A146.34146%0A175.60976%0A204.87805%0A234.14634%0A263.41463%0A292.68293%0A321.95122%0A351.21951%0A380.48780%0A409.75610%0A439.02439%0A468.29268%0A497.56098%0A526.82927%0A556.09756%0A585.36585%0A614.63415%0A643.90244%0A673.17073%0A702.43902%0A731.70732%0A760.97561%0A790.24390%0A819.51220%0A848.78049%0A878.04878%0A907.31707%0A936.58537%0A965.85366%0A995.12195%0A1024.39024%0A1053.65854%0A1082.92683%0A1112.19512%0A1141.46341%0A1170.73171%0A1200.00000&names=0%2F41%0A1%0A2%0A3%0A4%0A5%0A6%0A7%0A8%0A9%0A10%0A11%0A12%0A13%0A14%0A15%0A16%0A17%0A18%0A19%0A20%0A21%0A22%0A23%0A24%0A25%0A26%0A27%0A28%0A29%0A30%0A31%0A32%0A33%0A34%0A35%0A36%0A37%0A38%0A39%0A40&note_colors=ffffff%0Ac3b7ab%0A878787%0Aff9f40%0A878787%0Aff9f40%0Aabb7c3%0Affffff%0Ac3b7ab%0A878787%0Aff9f40%0A878787%0Aff9f40%0Aabb7c3%0Affffff%0Ac3b7ab%0Aabb7c3%0Affffff%0Ac3b7ab%0A878787%0Aff9f40%0A878787%0Aff9f40%0Aabb7c3%0Affffff%0Ac3b7ab%0A878787%0Aff9f40%0A878787%0Aff9f40%0Aabb7c3%0Affffff%0Ac3b7ab%0A878787%0Aff9f40%0A878787%0Aff9f40%0Aabb7c3%0Affffff%0Ac3b7ab%0Aabb7c3">41-ed2 Bosanquet / Wilson / Terpstra</option>
                              </optgroup>
              
                          </select>
  
                          <label>Fundamental (Hz)</label>
                          <input id="fundamental" type="number" step="any" min="20" max="20000" value="256" onchange="changeURL();noPreset();" class="u-full-width">
                       </div>
			
						<div class="u-half-width">
              
                          <label>Right Facing Steps</label>
                          <input id="rSteps" type="number" min="-1220" max="1220" value="4" onchange="changeURL();noPreset();" class="u-full-width">  
                  
                          <label>Up/Right Facing Steps</label>
                          <input id="urSteps" type="number" min="-1220" max="1220" value="7" onchange="changeURL();noPreset();" class="u-full-width">   
						</div>
                    </div>
        
					<div class="one-half column thincol-parent">
						<div class="u-half-width rpad"> 
                    
                          <label>Hex Size (pixels)</label>
                          <input id="hexSize" type="number" step="any" min="20" max="1000" value="50" onchange="changeURL();noPreset();" class="u-full-width"> 
              
                          <label>Rotation (degrees)</label>
                          <input id="rotation" type="number" step="any" min="0" max="360" value="343.897886248" onchange="changeURL();noPreset();" class="u-full-width">  
						</div>
                    
						<div class="u-half-width">
			
                          <label>Instrument</label>
                          <select id="instrument" onchange="changeURL();noPreset();"  class="u-full-width">
                              <option value="piano">Piano</option>
                              <option value="harpsichord">Harpsichord</option>
                              <option value="rhodes">Rhodes</option>
                              <option value="harp">Harp</option>
                              <option value="choir">Choir</option>
                              <option value="strings">Strings</option>
                              <option value="sawtooth">Sawtooth</option>
                              <option value="gayageum">Gayageum</option>
                              <option value="qanun">Qanun</option>
                              <option value="organ">Organ</option>
                              <option value="organleslie">Organ + Leslie</option>
                              <option value="5Lstudy">5-Limit Study Tone</option>
                          </select>
  
                          <label>
                              <input id="enum" type="checkbox" name="number_or_name" value="fnord" onchange="hideRevealNames();noPreset();">
                              <span class="label-body">Enumerate Scale</span>
                          </label>
  
                          <label>
                              <input id="spectrum_colors" type="checkbox" name="spectrum_colors" value="fnord" onchange="hideRevealColors();noPreset();">
                              <span class="label-body">Use Spectrum Colors</span>
                          </label>
  
                          <label>
                              <input id="no_labels" type="checkbox" name="no_labels" value="fnord" onchange="hideRevealEnum();noPreset();">
                              <span class="label-body">Blank Keys (No labels)</span>
                          </label>
						</div>
					</div>
				</div>
                
                <div class="row">
                    <img src="1x1.png" style="margin: 1.5%">
                </div>

				<div class="row">
					<div class="one-half column pushrow-mobile">
						<label>Scale (Scala format)</label>
						<textarea id="scale" onchange="changeURL();noPreset();" class="iosscrollable u-full-width" rows="12">! 31-ed2 Bosanquet Wilson Terpstra.scl
! 31-tone equal tempered scale consisting of 31 sonically equal divisions per frequency halving/doubling in standard meantone notation, mapped on a Bosanquet / Wilson / Terpstra layout.
!
Terpstra Keyboard WebApp | 31-ed2 Bosanquet / Wilson / Terpstra
31
!
38.70968
77.41935
116.12903
154.83871
193.54839
232.25806
270.96774
309.67742
348.38710
387.09677
425.80645
464.51613
503.22581
541.93548
580.64516
619.35484
658.06452
696.77419
735.48387
774.19355
812.90323
851.61290
890.32258
929.03226
967.74194
1006.45161
1045.16129
1083.87097
1122.58065
1161.29032
1200.00000</textarea>
                  </div>

                  <div class="one-half column thincol-parent">
                    <div class="u-half-width rpad"> 
                      <label id="numberLabel" style="display: block;">Steps To Equivalence Interval</label>
                      <input id="equivSteps" type="number" min="1" max="200" value="" onchange="changeURL();noPreset();" style="display: block;" class="u-full-width">
              
                      <label id="namesLabel" style="display: none;">Note Names</label>
                      <textarea id="names" onchange="changeURL();noPreset();" class="iosscrollable u-full-width" rows="12" style="display: none;">C
D♭♭
C♯
D♭
C×
D
E♭♭
D♯
E♭
D×
E
F♭
E♯
F
G♭♭
F♯
G♭
F×
G
A♭♭
G♯
A♭
G×
A
B♭♭
A♯
B♭
A×
B
C♭
B♯</textarea>
					</div>
	
                    <div class="u-half-width">
                        <label id="fundamental_colorLabel" style="display: none;">Fundamental Color</label>
                        <input type="text" id="fundamental_color" style="display: none;" class="jscolor u-full-width" value="#55ff55">
                    
                        <label id="note_colorsLabel">Color Layout</label>
                        <textarea id="note_colors" onchange="changeURL();noPreset();" class="iosscrollable u-full-width" rows="12">ffffff
ff9f41
cfcfcf
bbaa93
7b7b7b
ffffff
ff9f41
cfcfcf
bbaa93
7b7b7b
ffffff
bbaa93
cfcfcf
ffffff
ff9f41
cfcfcf
bbaa93
7b7b7b
ffffff
ff9f41
cfcfcf
bbaa93
7b7b7b
ffffff
ff9f41
cfcfcf
bbaa93
7b7b7b
ffffff
bbaa93
cfcfcf
ffffff</textarea>
                    </div>
                  </div>
				</div>
				<br>
				<input name="Submit" type="submit" value="Make me a microtonal keyboard!">
            </form>
        </div>
        
		<div class="container">
          Designed by <a href="http://siementerpstra.com/" target="new">Siemen Terpstra</a> in the late ’80’s. WebApp developed by <a href="http://jamesfenn.com/" target="new">James Fenn</a> with additions and modifications by <a href="http://brandlew.com/" target="new">Brandon Lewis</a> and <a href="http://whatmusicreallyis.com/" title="What Music Really İs" target="new">Bo Constantinsen</a>. Credits to Scott Thompson and <a href="http://ozanyarman.com/">Dr Ozan Yarman</a> for contributing samples. Current version 1.0 (Jan. 2015 — Jul. 2016).
		</div>
	</div>
    
	<canvas id="keyboard" tabindex="1" width="1897" height="936" style="display: none; height: 936px; width: 1897px; margin-top: -468px; margin-left: -948.5px;"></canvas>
	
	<img src="back.png" id="backButton" onclick="back()" style="display: none;">
	
	<script>
	//check\set preset
	checkPreset(16);
		// fill in form 
    document.getElementById('settingsForm').onsubmit = goKeyboard;
    
		var getData = new QueryData(location.search, true);
		document.getElementById("fundamental").value = ("fundamental" in getData) ? getData.fundamental : 263.09212;
		document.getElementById("rSteps").value = ("right" in getData) ? getData.right : 5;
		document.getElementById("urSteps").value = ("upright" in getData) ? getData.upright : 2;
		document.getElementById("hexSize").value = ("size" in getData) ? getData.size : 50;
		document.getElementById("rotation").value = ("rotation" in getData) ? getData.rotation : 343.897886248;
		document.getElementById("instrument").value = ("instrument" in getData) ? getData.instrument : "organ";
		document.getElementById("enum").checked = ("enum" in getData) ? JSON.parse(getData.enum) : false;
		document.getElementById("equivSteps").value = ("equivSteps" in getData) ? getData.equivSteps : 31;	
		document.getElementById("spectrum_colors").checked = ("spectrum_colors" in getData) ? JSON.parse(getData.spectrum_colors) : false;		
		document.getElementById("fundamental_color").value = ("fundamental_color" in getData) ? getData.fundamental_color : '#55ff55';
		document.getElementById("no_labels").checked = ("no_labels" in getData) ? JSON.parse(getData.no_labels) : false;


		var global_pressed_interval;
		var current_text_color= "#000000";

		if ("scale" in getData) {
			document.getElementById("scale").value = getData.scale[0];
		}
		
		if ("names" in getData) {
			document.getElementById("names").value = getData.names[0];
		} 

		if ("note_colors" in getData) {
			document.getElementById("note_colors").value = getData.note_colors[0];
		}
		
		hideRevealNames();
		hideRevealColors();
		hideRevealEnum();
		
		function hideRevealNames() {
			if (document.getElementById("enum").checked) {
				document.getElementById("equivSteps").style.display = 'block';
				document.getElementById("names").style.display = 'none';
				document.getElementById("numberLabel").style.display = 'block';
				document.getElementById("namesLabel").style.display = 'none';
			} else {
				document.getElementById("equivSteps").style.display = 'none';
				document.getElementById("names").style.display = 'block';
				document.getElementById("numberLabel").style.display = 'none';
				document.getElementById("namesLabel").style.display = 'block';
			}
			changeURL();
		}

		function hideRevealColors() {
    		if (document.getElementById("spectrum_colors").checked) {
				document.getElementById("fundamental_color").style.display = 'block';
				document.getElementById("fundamental_colorLabel").style.display = 'block';
				document.getElementById("note_colors").style.display = 'none';
                document.getElementById("note_colorsLabel").style.display = 'none';
		
			} else {
				document.getElementById("fundamental_color").style.display = 'none';
				document.getElementById("fundamental_colorLabel").style.display = 'none';
				document.getElementById("note_colors").style.display = 'block';
                document.getElementById("note_colorsLabel").style.display = 'block';
			}

			changeURL();

		}

		function hideRevealEnum(){
			if(document.getElementById("no_labels").checked){
				//document.getElementById("enum").checked=false;
				document.getElementById("enum").disabled=true;
				document.getElementById("equivSteps").style.display = 'none';
				document.getElementById("names").style.display = 'none';
				document.getElementById("numberLabel").style.display = 'none';
				document.getElementById("namesLabel").style.display = 'none';
			}
			else
			{
				document.getElementById("enum").disabled=false;
				if(!document.getElementById('enum').checked)
				{
					document.getElementById("namesLabel").style.display = 'block';
					document.getElementById("names").style.display = 'block';
				}
				else
				{
					document.getElementById("equivSteps").style.display = 'block';
					document.getElementById("numberLabel").style.display = 'block';
				}
			}
			changeURL();
		}
		
		function Point(x, y) {
			this.x = x;
			this.y = y;
		}
		
		Point.prototype.equals = function(p) {
			return (this.x == p.x && this.y == p.y)
		}
		
		Point.prototype.plus = function(p) {
			var x = this.x + p.x;
			var y = this.y + p.y;
			return (new Point(x, y));
		}
		
		Point.prototype.minus = function(p) {
			var x = this.x - p.x;
			var y = this.y - p.y;
			return (new Point(x, y));
		}
		
		function changeURL() {
			var url = window.location.pathname + "?";
			// add fundamental, right, upright, size
			
			url += "fundamental=" + document.getElementById("fundamental").value
					+ "&right=" + document.getElementById("rSteps").value
					+ "&upright=" + document.getElementById("urSteps").value
					+ "&size=" + document.getElementById("hexSize").value
					+ "&rotation=" + document.getElementById("rotation").value
					+ "&instrument=" + document.getElementById("instrument").value
					+ "&enum=" + document.getElementById("enum").checked
					+ "&equivSteps=" + document.getElementById("equivSteps").value
                    + "&spectrum_colors=" + document.getElementById("spectrum_colors").checked
                    + "&fundamental_color=" + document.getElementById("fundamental_color").value
                    + "&no_labels=" + document.getElementById("no_labels").checked;
			
			url += "&scale=";	
			url += encodeURIComponent(document.getElementById('scale').value);
			
			url += "&names=";
			url += encodeURIComponent(document.getElementById('names').value);			

			url += "&note_colors=";
			url += encodeURIComponent(document.getElementById('note_colors').value);
			
			// Find scl file description for the page title
			
			var scaleLines = document.getElementById('scale').value.split('\n');
			var first = true;
			var foundDescription = false;
			var description = "Terpstra Keyboard WebApp";
			
			scaleLines.forEach( function(line) {
				if(!(foundDescription) && !(line.match(/^\!/)) && line.match(/[a-zA-Z]+/)) {
					foundDescription = true;
					description = line;
				}
			});
			
			document.title = description;
			
			window.history.replaceState( {} , '', url ); 
		}
		
		var settings = new Object;
	
		function parseScale() {
			settings.scale = new Array;
			var scaleLines = document.getElementById('scale').value.split('\n');
			scaleLines.forEach( function(line) {
				if (line.match(/^[1234567890.\s/]+$/) && !(line.match(/^\s+$/)) ) { 
					if (line.match(/\//)) {
						// ratio
						var nd = line.split('/');
						var ratio = 1200 *  Math.log(parseInt(nd[0]) / parseInt(nd[1])) / Math.log(2);
						settings.scale.push(ratio);
					} else {
						if (line.match(/\./))
						// cents
							settings.scale.push(parseFloat(line));
					}
				}
			});
			settings.equivInterval = settings.scale.pop();
			settings.scale.unshift(0);
		}

		function parseScaleColors()
		{
			settings.keycolors = new Array;
			var colorsArray = document.getElementById('note_colors').value.split('\n');
			colorsArray.forEach( function(line) {
				settings.keycolors.push(line);
			});
		}
				
		function calculateRotationMatrix(rotation, center) {
			var m = new Array;

			m[0] = Math.cos(rotation);
			m[1] = Math.sin(rotation);
			m[2] = -m[1];
			m[3] = m[0];
			m[4] = center.x - m[0] * center.x - m[2] * center.y;		
			m[5] = center.y - m[1] * center.x - m[3] * center.y;
			
			return m;
		}
		
		function applyMatrixToPoint(m, p) { /*Array, Point*/
					return new Point(
						m[0] * p.x + m[2] * p.y + m[4],
						m[1] * p.x + m[3] * p.y + m[5]
					);
		}
		
		function resizeHandler () {
			// Resize Inner and outer coordinates of canvas to preserve aspect ratio
		
			var newWidth = window.innerWidth;
			var newHeight = window.innerHeight;
			
			settings.canvas.style.height = newHeight + 'px';
			settings.canvas.style.width = newWidth + 'px';
    
			settings.canvas.style.marginTop = (-newHeight / 2) + 'px';
			settings.canvas.style.marginLeft = (-newWidth / 2) + 'px';
    
			settings.canvas.width = newWidth;
			settings.canvas.height = newHeight;
			
			// Find new centerpoint
			
			var centerX = newWidth / 2;
			var centerY = newHeight / 2;
			settings.centerpoint = new Point(centerX, centerY);
			
			// Rotate about it

			if (settings.rotationMatrix) { 
				settings.context.restore();
			}
			settings.context.save();
			
			settings.rotationMatrix = calculateRotationMatrix(-settings.rotation, settings.centerpoint);
			
			var m = calculateRotationMatrix(settings.rotation, settings.centerpoint);
			settings.context.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);
			
			// Redraw Grid
			
			drawGrid();
		}
		
		function back() {
			document.getElementById("keyboard").style.display = "none";
			document.getElementById("backButton").style.display = "none";
			document.getElementById("landing-page").style.display = "block";
			document.body.style.overflow = 'scroll';
		}
		
		function goKeyboard() {
		
			changeURL();
			
			// Set up screen 
			
			document.getElementById("landing-page").style.display = "none";
			document.getElementById("keyboard").style.display = "block";
			document.body.style.overflow = 'hidden';
			document.getElementById("backButton").style.display = "block";
			
			// set up settings constants
			
			settings.fundamental = document.getElementById("fundamental").value;
			settings.rSteps = document.getElementById("rSteps").value;
			settings.urSteps = parseFloat(settings.rSteps) - parseFloat(document.getElementById("urSteps").value); // Adjust to different coordinate system
			settings.hexSize = document.getElementById("hexSize").value;
			settings.rotation = (document.getElementById("rotation").value * 2 * Math.PI) / 360;
			parseScale();
			parseScaleColors();
			settings.names = document.getElementById('names').value.split('\n');
			settings.enum = document.getElementById('enum').checked;
			settings.equivSteps = parseInt(document.getElementById('equivSteps').value);
			
			settings.canvas = document.getElementById('keyboard');
			settings.context = settings.canvas.getContext('2d');
			
			settings.hexHeight = settings.hexSize * 2;
			settings.hexVert = settings.hexHeight * 3/4;
			settings.hexWidth = Math.sqrt(3)/2 * settings.hexHeight;

			settings.no_labels = document.getElementById('no_labels').checked;
			settings.spectrum_colors = document.getElementById('spectrum_colors').checked;
			settings.fundamental_color = document.getElementById('fundamental_color').value;
			
			// Set up resize handler
			
			window.addEventListener('resize', resizeHandler, false);
			window.addEventListener('orientationchange', resizeHandler, false);
			
			//... and give it an initial call
			
			resizeHandler();			
			
			// Set up synth
			
			settings.sampleBuffer = [,,,];
			var instrumentOption = document.getElementById("instrument").selectedIndex;
			var instruments = [
				{ fileName : "piano", fade : 0.1},
				{ fileName : "harpsichord", fade : 0.2},
				{ fileName : "rhodes", fade : 0.1},
				{ fileName : "harp", fade : 0.2},
				{ fileName : "choir", fade : 0.5},
				{ fileName : "strings", fade : 0.9},
				{ fileName : "sawtooth", fade : 0.2},
				{ fileName : "gayageum", fade : 1},
				{ fileName : "qanun", fade : 1},
				{ fileName : "organ", fade : 0.1},
				{ fileName : "organleslie", fade : 0.1},
				{ fileName : "5Lstudy", fade : 0.1}
				
			];
			
			//console.log(instruments[instrumentOption]);
			
			loadSample(instruments[instrumentOption].fileName, 0);
			settings.sampleFadeout = instruments[instrumentOption].fade;
			
			// Set up keyboard, touch and mouse event handlers
			
			settings.sustain = false;
			settings.sustainedNotes = new Array;
			//settings.canvas.addEventListener("keydown", sustainOn, false); // Firefox isn't firing :(
			//settings.canvas.addEventListener("keyup", sustainOff, false);
			
			if(typeof(shake_sustain) == 'undefined')
			{
				shake_sustain=1;
				window.addEventListener("keydown", sustainOn, true);
				window.addEventListener("keyup", sustainOff, false);
			}

			//iPad Shake to toggle sustain
			if (typeof window.DeviceMotionEvent != 'undefined') 
			{
				var lastShakeCheck=0;
				var lastShakeCount=0;

			    // Shake sensitivity (a lower number is more)
			    var sensitivity = 5;

			    // Position variables
			    var x1 = 0, y1 = 0, z1 = 0, x2 = 0, y2 = 0, z2 = 0;

			    // Listen to motion events and update the position
			    window.addEventListener('devicemotion', function (e) {
			        x1 = e.accelerationIncludingGravity.x;
			        y1 = e.accelerationIncludingGravity.y;
			        z1 = e.accelerationIncludingGravity.z;
			    }, false);

			    // Periodically check the position and fire
			    // if the change is greater than the sensitivity
			    setInterval(function () {
			    	lastShakeCheck++;
			        var change = Math.abs(x1-x2+y1-y2+z1-z2);

			        if (change > sensitivity) {

			        	if(lastShakeCheck-lastShakeCount >=3)
			        	{
			        		lastShakeCount=lastShakeCheck;

				            if(settings.sustain == true)
				            {
				            	settings.sustain=false;
				            	for (var note = 0; note < settings.sustainedNotes.length; note++) {
									settings.sustainedNotes[note].noteOff();
								}
								settings.sustainedNotes = new Array;
				            	tempAlert('Sustain Off',900);
				            }
				            else
				            {
				            	settings.sustain=true;
				            	tempAlert('Sustain On',900);
				            }
			        	}
			        }

			        // Update new position
			        x2 = x1;
			        y2 = y1;
			        z2 = z1;
			    }, 300);
			}

			//
			
			settings.activeHexObjects = new Array;
			settings.canvas.addEventListener("touchstart", handleTouch, false);
			settings.canvas.addEventListener("touchend", handleTouch, false);
			settings.canvas.addEventListener("touchmove", handleTouch, false);
			
			settings.canvas.addEventListener("mousedown", function(e) {
				settings.canvas.addEventListener("mousemove", mouseActive, false);
				mouseActive(e);
			}, false);
			
			settings.canvas.addEventListener("mouseup", function(e) {
				settings.canvas.removeEventListener("mousemove", mouseActive);
				var coords = settings.activeHexObjects[0].coords;
				settings.activeHexObjects[0].noteOff();
				drawHex(coords, centsToColor(hexCoordsToCents(coords), false));
				settings.activeHexObjects.pop();
			}, false);
      return false;
		}
		
		function sustainOn (e) {
			//console.log("sustain On");
			if (e.keyCode == 32) {  // Spacebar
				settings.sustain = true;
			}
		}
		
		function sustainOff (e) {
			if (e.keyCode == 32) {  // Spacebar
				settings.sustain = false;
				for (var note = 0; note < settings.sustainedNotes.length; note++) {
					settings.sustainedNotes[note].noteOff();
				}
				settings.sustainedNotes = new Array;
			}
		}
		
		function mouseActive (e) {		
			var coords = getPointerPosition(e);
		
			coords = getHexCoordsAt(coords);
			
			if (settings.activeHexObjects.length == 0) {
				settings.activeHexObjects[0] = new ActiveHex(coords);
				var cents = hexCoordsToCents(coords);
				settings.activeHexObjects[0].noteOn(cents);
				drawHex(coords, centsToColor(cents, true)); 			
			} else {
				if (!(coords.equals(settings.activeHexObjects[0].coords))) {
					settings.activeHexObjects[0].noteOff();
					drawHex(settings.activeHexObjects[0].coords, centsToColor(hexCoordsToCents(settings.activeHexObjects[0].coords, false))); 
					
					settings.activeHexObjects[0] = new ActiveHex(coords);
					var cents = hexCoordsToCents(coords);
					settings.activeHexObjects[0].noteOn(cents);
					drawHex(coords, centsToColor(cents, true));
				}
			}
		}
		
		function getPointerPosition(e) {
			var parentPosition = getPosition(e.currentTarget);
			var xPosition = e.clientX - parentPosition.x;
			var yPosition = e.clientY - parentPosition.y;
			return new Point(xPosition, yPosition);
		}
 
		function getPosition(element) {
			var xPosition = 0;
			var yPosition = 0;
      
			while (element) {
				xPosition += (element.offsetLeft - element.scrollLeft + element.clientLeft);
				yPosition += (element.offsetTop - element.scrollTop + element.clientTop);
				element = element.offsetParent;
			}
			return { x: xPosition, y: yPosition };
		}
		
		function handleTouch(e) {
			e.preventDefault();
			
			for (var i = 0; i < settings.activeHexObjects.length; i++) {
				settings.activeHexObjects[i].release = true; 
			}
			
			for (var i = 0; i < e.targetTouches.length; i++) {
				var coords = getHexCoordsAt(new Point(e.targetTouches[i].pageX - settings.canvas.offsetLeft, e.targetTouches[i].pageY - settings.canvas.offsetTop));
				var found = false;
				
				for (var j = 0; j < settings.activeHexObjects.length; j++) {
					if (coords.equals(settings.activeHexObjects[j].coords)) {
						settings.activeHexObjects[j].release = false;
						found = true;
						
					}
				}
				if (!(found)) {
					var newHex = new ActiveHex(coords);
					var cents = hexCoordsToCents(coords);
					newHex.noteOn(cents);
					var c = centsToColor(cents, true);
					drawHex(coords, c);
					settings.activeHexObjects.push(newHex);
				}
			}
			
			for (var i = settings.activeHexObjects.length - 1; i >= 0; i--) {
				if (settings.activeHexObjects[i].release) {
					settings.activeHexObjects[i].noteOff();
					var coords = settings.activeHexObjects[i].coords;
					var c = centsToColor(hexCoordsToCents(coords), false);
					drawHex(coords, c);
					settings.activeHexObjects.splice(i, 1);
				}
			}
		}
		
		function drawGrid() {
			var max = (settings.centerpoint.x > settings.centerpoint.y) ? settings.centerpoint.x / settings.hexSize : settings.centerpoint.y / settings.hexSize;
			max = Math.floor(max);
			for (var r = -max; r < max; r++) {
				for (var ur = -max; ur < max; ur++) {
					var coords = new Point(r, ur);
					var c = centsToColor(hexCoordsToCents(coords), false);
					drawHex(coords, c);
				}
			}
		}
		
		function hexCoordsToScreen(hex) { /* Point */
			var screenX = settings.centerpoint.x + hex.x * settings.hexWidth + hex.y * settings.hexWidth / 2;
			var screenY = settings.centerpoint.y + hex.y * settings.hexVert;
			return (new Point(screenX, screenY));
		}
		
		function drawHex(p, c) { /* Point, color */
			
			var hexCenter = hexCoordsToScreen(p);
			
			// Calculate hex vertices
			
			var x = new Array;
			var y = new Array;
			for (var i = 0; i < 6; i++) {
				var angle = 2 * Math.PI / 6 * (i + 0.5);
				x[i] = hexCenter.x + settings.hexSize * Math.cos(angle);
				y[i] = hexCenter.y + settings.hexSize * Math.sin(angle);
			}
			
			// Draw filled hex
			
			settings.context.beginPath();
			settings.context.moveTo(x[0], y[0]);
			for (var i = 1; i < 6; i++) {
				settings.context.lineTo(x[i], y[i]);
			}
			settings.context.closePath();
			settings.context.fillStyle = c;
			settings.context.fill();
			
			// Save context and create a hex shaped clip
			
			settings.context.save();
			settings.context.beginPath();
			settings.context.moveTo(x[0], y[0]);
			for (var i = 1; i < 6; i++) {
				settings.context.lineTo(x[i], y[i]);
			}
			settings.context.closePath();
			settings.context.clip();
			
			// Calculate hex vertices outside clipped path
			
			var x2 = new Array;
			var y2 = new Array;
			for (var i = 0; i < 6; i++) {
				var angle = 2 * Math.PI / 6 * (i + 0.5);
				x2[i] = hexCenter.x + (parseFloat(settings.hexSize) + 3) * Math.cos(angle);
				y2[i] = hexCenter.y + (parseFloat(settings.hexSize) + 3) * Math.sin(angle);
			}
			
			// Draw shadowed stroke outside clip to create pseudo-3d effect 
			
			settings.context.beginPath();
			settings.context.moveTo(x2[0], y2[0]);
			for (var i = 1; i < 6; i++) {
				settings.context.lineTo(x2[i], y2[i]);
			}
			settings.context.closePath();
			settings.context.strokeStyle = 'black';
			settings.context.lineWidth = 5;
			settings.context.shadowBlur = 15;
			settings.context.shadowColor = 'black';
			settings.context.shadowOffsetX = 0;
			settings.context.shadowOffsetY = 0;
			settings.context.stroke();
			settings.context.restore();
			
			// Add a clean stroke around hex
			
			settings.context.beginPath();
			settings.context.moveTo(x[0], y[0]);
			for (var i = 1; i < 6; i++) {
				settings.context.lineTo(x[i], y[i]);
			}
			settings.context.closePath();
			settings.context.lineWidth = 2;
			settings.context.lineJoin = 'round';
			settings.context.strokeStyle = 'black';
			settings.context.stroke();
			
			// Add note name and equivalence interval multiple
			
			settings.context.save();
			settings.context.translate(hexCenter.x, hexCenter.y);
			settings.context.rotate(-settings.rotation);
			// hexcoords = p and screenCoords = hexCenter
	
			//settings.context.fillStyle = "black"; //bdl_04062016
			settings.context.fillStyle = getContrastYIQ(current_text_color);
			settings.context.font = "22pt Arial";
			settings.context.textAlign = "center";
			settings.context.textBaseline = "middle";
			
			var note = p.x * settings.rSteps + p.y * settings.urSteps;
			var equivSteps = settings.enum ? parseInt(settings.equivSteps) : settings.scale.length;
			var equivMultiple = Math.floor(note / equivSteps);
			var reducedNote = note % equivSteps;
			if (reducedNote < 0) {
				reducedNote = equivSteps + reducedNote;
			}
			
			if(!settings.no_labels)
			{
				var name = settings.enum ? "" + reducedNote : settings.names[reducedNote];
				if (name) {
					settings.context.save();
					var scaleFactor = name.length > 3 ? 3 / name.length : 1;
					scaleFactor *= settings.hexSize / 50;
					settings.context.scale(scaleFactor, scaleFactor);
					settings.context.fillText(name, 0, 0);
					settings.context.restore();
				}
				
				var scaleFactor = settings.hexSize / 50;
				settings.context.scale(scaleFactor, scaleFactor);
				settings.context.translate(10, -25);
				settings.context.fillStyle = "white";
				settings.context.font = "12pt Arial";
				settings.context.textAlign = "center";
				settings.context.textBaseline = "middle";
				settings.context.fillText(equivMultiple, 0, 0);
			}
			
			settings.context.restore();
		}
		
		function centsToColor(cents, pressed) {
			if(!settings.spectrum_colors)
			{
				
				if(typeof(settings.keycolors[global_pressed_interval]) === 'undefined') 
				{
					var returnColor = "#EDEDE4";
				}
				else
				{
					var returnColor = settings.keycolors[global_pressed_interval];
				}
			
				var oldColor = returnColor;
				
				//convert color name to hex
				returnColor = nameToHex(returnColor);
				
				current_text_color = returnColor;
				
				//convert the hex to rgb
				returnColor = hex2rgb(returnColor);

				//darken for pressed key
				if(pressed)
				{
					returnColor[0]-=90;
					returnColor[1]-=90;
				}
				
				return rgb(returnColor[0], returnColor[1], returnColor[2]);
		
			}

			var fcolor = hex2rgb("#" + settings.fundamental_color);
			fcolor = rgb2hsv(fcolor[0], fcolor[1], fcolor[2]);

			var h = fcolor.h/360;
			var s = fcolor.s/100;
			var v = fcolor.v/100;
			//var h = 145/360; // green
			var reduced = (cents / 1200) % 1;
			if (reduced < 0) reduced += 1;
			h = (reduced + h) % 1;

			v = (pressed) ? v-(v/2) : v;
			
			returnColor = HSVtoRGB(h, s, v);

			//setup text color
			var tcolor = HSVtoRGB2(h,s,v);
			current_text_color = rgbToHex(tcolor.red, tcolor.green, tcolor.blue);
			return returnColor;
		}
		
		function roundTowardZero(val) {
			if (val < 0) {
				return Math.ceil(val);
			}
    		return Math.floor(val);
		}
		
		function hexCoordsToCents(coords) {
			var distance = coords.x * settings.rSteps + coords.y * settings.urSteps;
			var octs = roundTowardZero(distance / settings.scale.length);
			var reducedSteps = distance % settings.scale.length;
			if (reducedSteps < 0) {
				reducedSteps += settings.scale.length;
				octs -= 1;
			}
			var cents = octs * settings.equivInterval + settings.scale[reducedSteps];
			global_pressed_interval = reducedSteps;
			return cents;
		}
		
		function getHexCoordsAt(coords) {
			coords = applyMatrixToPoint(settings.rotationMatrix, coords);
			var x = coords.x - settings.centerpoint.x;
			var y = coords.y - settings.centerpoint.y;

			var q = (x * Math.sqrt(3)/3 - y / 3) / settings.hexSize;
			var r = y * 2/3 / settings.hexSize;
			
			q = Math.round(q);
			r = Math.round(r);
			
			var guess = hexCoordsToScreen(new Point(q, r));
			
			// This gets an approximation; now check neighbours for minimum distance
			
			var minimum = 100000;
			var closestHex = new Point(q, r);
			for (var qOffset = -1; qOffset < 2; qOffset++) {
				for (var rOffset = -1; rOffset < 2; rOffset++) {
					var neighbour = new Point(q + qOffset, r + rOffset);
					var diff = hexCoordsToScreen(neighbour).minus(coords);
					var distance = diff.x * diff.x + diff.y * diff.y;
					if (distance < minimum) {
						minimum = distance;
						closestHex = neighbour;
					}
				}
			}
			
			return(closestHex);  
		}
		
		function rgb(r, g, b) {
			return "rgb("+r+","+g+","+b+")";
		}
		
		function HSVtoRGB(h, s, v) {
			var r, g, b, i, f, p, q, t;
			i = Math.floor(h * 6);
			f = h * 6 - i;
			p = v * (1 - s);
			q = v * (1 - f * s);
			t = v * (1 - (1 - f) * s);
			switch (i % 6) {
				case 0: r = v, g = t, b = p; break;
				case 1: r = q, g = v, b = p; break;
				case 2: r = p, g = v, b = t; break;
				case 3: r = p, g = q, b = v; break;
				case 4: r = t, g = p, b = v; break;
				case 5: r = v, g = p, b = q; break;
			}
			return rgb(Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255));
		}

		function HSVtoRGB2(h, s, v) {
			var r, g, b, i, f, p, q, t;
			i = Math.floor(h * 6);
			f = h * 6 - i;
			p = v * (1 - s);
			q = v * (1 - f * s);
			t = v * (1 - (1 - f) * s);
			switch (i % 6) {
				case 0: r = v, g = t, b = p; break;
				case 1: r = q, g = v, b = p; break;
				case 2: r = p, g = v, b = t; break;
				case 3: r = p, g = q, b = v; break;
				case 4: r = t, g = p, b = v; break;
				case 5: r = v, g = p, b = q; break;
			}
		
			return {
		        red: Math.floor(r * 255),
		        green: Math.floor(g * 255),
		        blue: Math.floor(b * 255)
		    };
		}

		function ActiveHex(coords) {
			this.coords = coords;
			this.release = false;
			this.freq = 440;
		}
		
		ActiveHex.prototype.noteOn = function(cents) {
			var freq = settings.fundamental * Math.pow(2, cents / 1200);
			var source = settings.audioContext.createBufferSource(); // creates a sound source
			// Choose sample
			var sampleFreq = 110;
			var sampleNumber = 0;
			if (freq > 155) {
				if (freq > 311) {
					if (freq > 622) {
						sampleFreq = 880; sampleNumber = 3;
					} else {
						sampleFreq = 440; sampleNumber = 2;
					}
				} else {
					sampleFreq = 220; sampleNumber = 1;
				}				
			}
			
			if (!(settings.sampleBuffer[sampleNumber])) return; // Sample not yet loaded
			
			source.buffer = settings.sampleBuffer[sampleNumber];     // tell the source which sound to play
			source.playbackRate.value = freq / sampleFreq;
			// Create a gain node.
			var gainNode = settings.audioContext.createGain();
			// Connect the source to the gain node.
			source.connect(gainNode);
			// Connect the gain node to the destination.
			gainNode.connect(settings.audioContext.destination);
			source.connect(gainNode);       // connect the source to the context's destination (the speakers)
			gainNode.gain.value = 0.3;
			source.start(0);                           // play the source now
            this.source = source;
			this.gainNode = gainNode;
		}
		
		ActiveHex.prototype.noteOff = function() {
			if (settings.sustain) {
				settings.sustainedNotes.push(this);
			} else {
			var fadeout = settings.audioContext.currentTime + settings.sampleFadeout;
				if (this.gainNode) this.gainNode.gain.setTargetAtTime(0, settings.audioContext.currentTime, settings.sampleFadeout);
				if (this.source) this.source.stop(fadeout + 4); // This is a terrible fudge. Please forgive me - it's late, I'm tired, I have a deadline, I've got other shit to do

			}
		}
		
window.addEventListener('load', init, false);

function init() {
  try {
    // Fix up for prefixing
    window.AudioContext = window.AudioContext||window.webkitAudioContext;
    settings.audioContext = new AudioContext();
  }
  catch(e) {
    alert('Web Audio API is not supported in this browser');
  }
}
	
	function loadSample(name, iteration) {
		// It seems audioContext doesn't cope with simultaneous decodeAudioData calls ):
		
		var sampleFreqs = ["110", "220", "440", "880", "1760"];
		//for (var i = 0; i < 4; ++i) {
			var request = new XMLHttpRequest();
			var url = 'sounds/' + name + sampleFreqs[iteration] + '.mp3';
			//console.log(iteration);
			request.open('GET', url, true);
			request.responseType = 'arraybuffer';

			// Decode asynchronously
			request.onload = function() {
				settings.audioContext.decodeAudioData(request.response, function(buffer) {
				settings.sampleBuffer[iteration] = buffer;
				if (iteration < 3) loadSample(name, iteration + 1);
				}, onLoadError);
			}
			request.send();
		//}
	}
	
function onLoadError(e) {
	alert("Couldn't load sample");
}



function tempAlert(msg,duration)
{
	 var el = document.createElement("div");
	 el.setAttribute("style","position:absolute;top:40%;left:20%;background-color:white; font-size:25px;");
	 el.innerHTML = msg;
	 setTimeout(function(){
	  el.parentNode.removeChild(el);
	 },duration);
	 document.body.appendChild(el);
}
	

function nameToHex(colour) {
    var colours = {
        "aliceblue": "#f0f8ff",
        "antiquewhite": "#faebd7",
        "aqua": "#00ffff",
        "aquamarine": "#7fffd4",
        "azure": "#f0ffff",
        "beige": "#f5f5dc",
        "bisque": "#ffe4c4",
        "black": "#000000",
        "blanchedalmond": "#ffebcd",
        "blue": "#0000ff",
        "blueviolet": "#8a2be2",
        "brown": "#a52a2a",
        "burlywood": "#deb887",
        "cadetblue": "#5f9ea0",
        "chartreuse": "#7fff00",
        "chocolate": "#d2691e",
        "coral": "#ff7f50",
        "cornflowerblue": "#6495ed",
        "cornsilk": "#fff8dc",
        "crimson": "#dc143c",
        "cyan": "#00ffff",
        "darkblue": "#00008b",
        "darkcyan": "#008b8b",
        "darkgoldenrod": "#b8860b",
        "darkgray": "#a9a9a9",
        "darkgreen": "#006400",
        "darkkhaki": "#bdb76b",
        "darkmagenta": "#8b008b",
        "darkolivegreen": "#556b2f",
        "darkorange": "#ff8c00",
        "darkorchid": "#9932cc",
        "darkred": "#8b0000",
        "darksalmon": "#e9967a",
        "darkseagreen": "#8fbc8f",
        "darkslateblue": "#483d8b",
        "darkslategray": "#2f4f4f",
        "darkturquoise": "#00ced1",
        "darkviolet": "#9400d3",
        "deeppink": "#ff1493",
        "deepskyblue": "#00bfff",
        "dimgray": "#696969",
        "dodgerblue": "#1e90ff",
        "firebrick": "#b22222",
        "floralwhite": "#fffaf0",
        "forestgreen": "#228b22",
        "fuchsia": "#ff00ff",
        "gainsboro": "#dcdcdc",
        "ghostwhite": "#f8f8ff",
        "gold": "#ffd700",
        "goldenrod": "#daa520",
        "gray": "#808080",
        "green": "#008000",
        "greenyellow": "#adff2f",
        "honeydew": "#f0fff0",
        "hotpink": "#ff69b4",
        "indianred ": "#cd5c5c",
        "indigo": "#4b0082",
        "ivory": "#fffff0",
        "khaki": "#f0e68c",
        "lavender": "#e6e6fa",
        "lavenderblush": "#fff0f5",
        "lawngreen": "#7cfc00",
        "lemonchiffon": "#fffacd",
        "lightblue": "#add8e6",
        "lightcoral": "#f08080",
        "lightcyan": "#e0ffff",
        "lightgoldenrodyellow": "#fafad2",
        "lightgrey": "#d3d3d3",
        "lightgreen": "#90ee90",
        "lightpink": "#ffb6c1",
        "lightsalmon": "#ffa07a",
        "lightseagreen": "#20b2aa",
        "lightskyblue": "#87cefa",
        "lightslategray": "#778899",
        "lightsteelblue": "#b0c4de",
        "lightyellow": "#ffffe0",
        "lime": "#00ff00",
        "limegreen": "#32cd32",
        "linen": "#faf0e6",
        "magenta": "#ff00ff",
        "maroon": "#800000",
        "mediumaquamarine": "#66cdaa",
        "mediumblue": "#0000cd",
        "mediumorchid": "#ba55d3",
        "mediumpurple": "#9370d8",
        "mediumseagreen": "#3cb371",
        "mediumslateblue": "#7b68ee",
        "mediumspringgreen": "#00fa9a",
        "mediumturquoise": "#48d1cc",
        "mediumvioletred": "#c71585",
        "midnightblue": "#191970",
        "mintcream": "#f5fffa",
        "mistyrose": "#ffe4e1",
        "moccasin": "#ffe4b5",
        "navajowhite": "#ffdead",
        "navy": "#000080",
        "oldlace": "#fdf5e6",
        "olive": "#808000",
        "olivedrab": "#6b8e23",
        "orange": "#ffa500",
        "orangered": "#ff4500",
        "orchid": "#da70d6",
        "palegoldenrod": "#eee8aa",
        "palegreen": "#98fb98",
        "paleturquoise": "#afeeee",
        "palevioletred": "#d87093",
        "papayawhip": "#ffefd5",
        "peachpuff": "#ffdab9",
        "peru": "#cd853f",
        "pink": "#ffc0cb",
        "plum": "#dda0dd",
        "powderblue": "#b0e0e6",
        "purple": "#800080",
        "red": "#ff0000",
        "rosybrown": "#bc8f8f",
        "royalblue": "#4169e1",
        "saddlebrown": "#8b4513",
        "salmon": "#fa8072",
        "sandybrown": "#f4a460",
        "seagreen": "#2e8b57",
        "seashell": "#fff5ee",
        "sienna": "#a0522d",
        "silver": "#c0c0c0",
        "skyblue": "#87ceeb",
        "slateblue": "#6a5acd",
        "slategray": "#708090",
        "snow": "#fffafa",
        "springgreen": "#00ff7f",
        "steelblue": "#4682b4",
        "tan": "#d2b48c",
        "teal": "#008080",
        "thistle": "#d8bfd8",
        "tomato": "#ff6347",
        "turquoise": "#40e0d0",
        "violet": "#ee82ee",
        "wheat": "#f5deb3",
        "white": "#ffffff",
        "whitesmoke": "#f5f5f5",
        "yellow": "#ffff00",
        "yellowgreen": "#9acd32"
    };

    if (typeof colours[colour.toLowerCase()] != 'undefined') 
	{
		return colours[colour.toLowerCase()];
	}
	else if(colour.indexOf("#") ==0)
	{
		return colour;
	}
	else if(colour.length==6 && colour.indexOf("#") ==-1)
	{
		return "#"+colour;
	}
    	

    return "#EDEDE4"; //default button color!

}

function hex2rgb(col) {
    var r, g, b;
    if (col.charAt(0) == '#') {
        col = col.substr(1);
    }
    r = col.charAt(0) + col.charAt(1);
    g = col.charAt(2) + col.charAt(3);
    b = col.charAt(4) + col.charAt(5);
    r = parseInt(r, 16);
    g = parseInt(g, 16);
    b = parseInt(b, 16);
    return [r, g, b]
}

function rgb2hsv (r1,g1,b1) {
    var rr, gg, bb,
        r = arguments[0] / 255,
        g = arguments[1] / 255,
        b = arguments[2] / 255,
        h, s,
        v = Math.max(r, g, b),
        diff = v - Math.min(r, g, b),
        diffc = function(c){
            return (v - c) / 6 / diff + 1 / 2;
        };

    if (diff == 0) {
        h = s = 0;
    } else {
        s = diff / v;
        rr = diffc(r);
        gg = diffc(g);
        bb = diffc(b);

        if (r === v) {
            h = bb - gg;
        }else if (g === v) {
            h = (1 / 3) + rr - bb;
        }else if (b === v) {
            h = (2 / 3) + gg - rr;
        }
        if (h < 0) {
            h += 1;
        }else if (h > 1) {
            h -= 1;
        }
    }
    return {
        h: Math.round(h * 360),
        s: Math.round(s * 100),
        v: Math.round(v * 100)
    };
}

function getContrastYIQ(hexcolor){
    hexcolor = hexcolor.replace("#", "");
	var r = parseInt(hexcolor.substr(0,2),16);
	var g = parseInt(hexcolor.substr(2,2),16);
	var b = parseInt(hexcolor.substr(4,2),16);
	var yiq = ((r*299)+(g*587)+(b*114))/1000;
	return (yiq >= 128) ? 'black' : 'white';
}

function rgbToHex(r, g, b) {
    return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
}


function checkPreset(init)
{
	var mselect = document.getElementById('quicklinks');
	var url_str = window.location.href;

	//first check for .htm as end of url and set the default preset (31ET)
	if( url_str.substr(url_str.length-4) =='.htm')
	{
		mselect.value=mselect.options[init].value;
	}
	for (var i=0; i<mselect.length; i++)
	{
		if(url_str.indexOf(mselect.options[i].value) !=-1)
		{
			//this is the correct preset
			mselect.value = mselect.options[i].value;

		}
	}
}

function noPreset()
{
	ms = document.getElementById('quicklinks');
	ms.value = ms.options[0].value;
}


	</script>

</body></html>